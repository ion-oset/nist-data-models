# generated by datamodel-codegen:
#   filename:  NIST_V0_cast_vote_records.json

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional, Union

from pydantic import AnyUrl, Extra, Field
from typing_extensions import Literal

from electos.datamodels.nist.models.base import NistModel


# --- Enumerations


class AllocationStatus(Enum):
    NO = "no"
    UNKNOWN = "unknown"
    YES = "yes"


class CastVoteRecordVersion(Enum):
    FIELD_1_0_0 = "1.0.0"


class ContestSelectionStatus(Enum):
    GENERATED_RULES = "generated-rules"
    INVALIDATED_RULES = "invalidated-rules"
    NEEDS_ADJUDICATION = "needs-adjudication"
    OTHER = "other"


class ContestStatus(Enum):
    INVALIDATED_RULES = "invalidated-rules"
    NOT_INDICATED = "not-indicated"
    OTHER = "other"
    OVERVOTED = "overvoted"
    UNDERVOTED = "undervoted"


class CVRStatus(Enum):
    NEEDS_ADJUDICATION = "needs-adjudication"
    OTHER = "other"


class CVRType(Enum):
    INTERPRETED = "interpreted"
    MODIFIED = "modified"
    ORIGINAL = "original"


class HashType(Enum):
    MD6 = "md6"
    OTHER = "other"
    SHA_256 = "sha-256"
    SHA_512 = "sha-512"


class IdentifierType(Enum):
    FIPS = "fips"
    LOCAL_LEVEL = "local-level"
    NATIONAL_LEVEL = "national-level"
    OCD_ID = "ocd-id"
    OTHER = "other"
    STATE_LEVEL = "state-level"


class IndicationStatus(Enum):
    NO = "no"
    UNKNOWN = "unknown"
    YES = "yes"


class PositionStatus(Enum):
    ADJUDICATED = "adjudicated"
    GENERATED_RULES = "generated-rules"
    INVALIDATED_RULES = "invalidated-rules"
    OTHER = "other"


class ReportType(Enum):
    ADJUDICATED = "adjudicated"
    AGGREGATED = "aggregated"
    ORIGINATING_DEVICE_EXPORT = "originating-device-export"
    OTHER = "other"
    RCV_ROUND = "rcv-round"


class ReportingUnitType(Enum):
    COMBINED_PRECINCT = "combined-precinct"
    OTHER = "other"
    POLLING_PLACE = "polling-place"
    PRECINCT = "precinct"
    SPLIT_PRECINCT = "split-precinct"
    VOTE_CENTER = "vote-center"


class VoteVariation(Enum):
    APPROVAL = "approval"
    BORDA = "borda"
    CUMULATIVE = "cumulative"
    MAJORITY = "majority"
    N_OF_M = "n-of-m"
    OTHER = "other"
    PLURALITY = "plurality"
    PROPORTIONAL = "proportional"
    RANGE = "range"
    RCV = "rcv"
    SUPER_MAJORITY = "super-majority"


# --- Models


class Annotation(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.Annotation"] = Field(..., alias="@type")

    adjudicator_name: Optional[List[str]] = Field(None, min_items=0)
    message: Optional[List[str]] = Field(None, min_items=0)
    time_stamp: Optional[datetime] = None


class Code(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.Code"] = Field(..., alias="@type")

    label: Optional[str] = None
    other_type: Optional[str] = None
    type: IdentifierType
    value: str


class File(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.File"] = Field(..., alias="@type")

    data: str
    file_name: Optional[str] = None
    mime_type: Optional[str] = None


class FractionalNumber(NistModel):
    __root__: str = Field(..., regex="([0-9]+/[1-9]+[0-9]*)|(\\.[0-9]+)")


class Hash(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.Hash"] = Field(..., alias="@type")

    other_type: Optional[str] = None
    type: HashType
    value: str


class Image(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.Image"] = Field(..., alias="@type")

    data: str
    file_name: Optional[str] = None
    mime_type: Optional[str] = None


class ImageData(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.ImageData"] = Field(..., alias="@type")

    hash: Optional[Hash] = None
    image: Optional[Image] = None
    location: Optional[AnyUrl] = None


class ReportingDevice(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.ReportingDevice"] = Field(..., alias="@type")

    application: Optional[str] = None
    code: Optional[List[Code]] = Field(None, min_items=0)
    manufacturer: Optional[str] = None
    mark_metric_type: Optional[str] = None
    model: Optional[str] = None
    notes: Optional[List[str]] = Field(None, min_items=0)
    serial_number: Optional[str] = None


class GpUnit(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.GpUnit"] = Field(..., alias="@type")

    code: Optional[List[Code]] = Field(None, min_items=0)
    name: Optional[str] = None
    other_type: Optional[str] = None
    reporting_device_ids: Optional[List[str]] = Field(None, min_items=0)
    type: ReportingUnitType


class BallotMeasureSelection(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.BallotMeasureSelection"] = Field(..., alias="@type")

    code: Optional[List[Code]] = Field(None, min_items=0)
    selection: str


class CandidateSelection(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.CandidateSelection"] = Field(..., alias="@type")

    candidate_ids: Optional[List[str]] = Field(None, min_items=0)
    code: Optional[List[Code]] = Field(None, min_items=0)
    is_write_in: Optional[bool] = None


class ContestSelection(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.ContestSelection"] = Field(..., alias="@type")
    Code: Optional[List[Code]] = Field(None, min_items=0)


class PartySelection(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.PartySelection"] = Field(..., alias="@type")

    code: Optional[List[Code]] = Field(None, min_items=0)
    party_ids: List[str] = Field(..., min_items=1)


class Party(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.Party"] = Field(..., alias="@type")

    abbreviation: Optional[str] = None
    code: Optional[List[Code]] = Field(None, min_items=0)
    name: Optional[str] = None


class Candidate(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.Candidate"] = Field(..., alias="@type")

    code: Optional[List[Code]] = Field(None, min_items=0)
    name: Optional[str] = None
    party_id: Optional[str] = None


class Contest(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.Contest"] = Field(..., alias="@type")

    abbreviation: Optional[str] = None
    code: Optional[List[Code]] = Field(None, min_items=0)
    contest_selection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    name: Optional[str] = None
    other_vote_variation: Optional[str] = None
    vote_variation: Optional[VoteVariation] = None


class BallotMeasureContest(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.BallotMeasureContest"] = Field(..., alias="@type")

    abbreviation: Optional[str] = None
    code: Optional[List[Code]] = Field(None, min_items=0)
    contest_selection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    name: Optional[str] = None
    other_vote_variation: Optional[str] = None
    vote_variation: Optional[VoteVariation] = None


class CandidateContest(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.CandidateContest"] = Field(..., alias="@type")

    abbreviation: Optional[str] = None
    code: Optional[List[Code]] = Field(None, min_items=0)
    contest_selection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    name: Optional[str] = None
    number_elected: Optional[int] = None
    other_vote_variation: Optional[str] = None
    primary_party_id: Optional[str] = None
    vote_variation: Optional[VoteVariation] = None
    votes_allowed: Optional[int] = None


class PartyContest(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.PartyContest"] = Field(..., alias="@type")

    abbreviation: Optional[str] = None
    code: Optional[List[Code]] = Field(None, min_items=0)
    contest_selection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    name: Optional[str] = None
    other_vote_variation: Optional[str] = None
    vote_variation: Optional[VoteVariation] = None


class RetentionContest(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.RetentionContest"] = Field(..., alias="@type")

    abbreviation: Optional[str] = None
    candidate_id: Optional[str] = None
    code: Optional[List[Code]] = Field(None, min_items=0)
    contest_selection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    name: Optional[str] = None
    other_vote_variation: Optional[str] = None
    vote_variation: Optional[VoteVariation] = None


class CVRWriteIn(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.CVRWriteIn"] = Field(..., alias="@type")

    text: Optional[str] = None
    write_in_image: Optional[ImageData] = None


class SelectionPosition(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.SelectionPosition"] = Field(..., alias="@type")

    c_v_r_write_in: Optional[CVRWriteIn] = None
    code: Optional[List[Code]] = Field(None, min_items=0)
    fractional_votes: Optional[FractionalNumber] = None
    has_indication: IndicationStatus
    is_allocable: Optional[AllocationStatus] = None
    is_generated: Optional[bool] = None
    mark_metric_value: Optional[List[str]] = Field(None, min_items=0)
    number_votes: int
    other_status: Optional[str] = None
    position: Optional[int] = None
    rank: Optional[int] = None
    status: Optional[List[PositionStatus]] = Field(None, min_items=0)


class CVRContestSelection(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.CVRContestSelection"] = Field(..., alias="@type")

    contest_selection_id: Optional[str] = None
    option_position: Optional[int] = None
    other_status: Optional[str] = None
    rank: Optional[int] = None
    selection_position: List[SelectionPosition] = Field(..., min_items=1)
    status: Optional[List[ContestSelectionStatus]] = Field(None, min_items=0)
    total_fractional_votes: Optional[FractionalNumber] = None
    total_number_votes: Optional[int] = None


class CVRContest(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.CVRContest"] = Field(..., alias="@type")

    c_v_r_contest_selection: Optional[List[CVRContestSelection]] = Field(None, min_items=0)
    contest_id: str
    other_status: Optional[str] = None
    overvotes: Optional[int] = None
    selections: Optional[int] = None
    status: Optional[List[ContestStatus]] = Field(None, min_items=0)
    undervotes: Optional[int] = None
    write_ins: Optional[int] = None


class CVRSnapshot(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.CVRSnapshot"] = Field(..., alias="@type")

    annotation: Optional[List[Annotation]] = Field(None, min_items=0)
    c_v_r_contest: Optional[List[CVRContest]] = Field(None, min_items=0)
    other_status: Optional[str] = None
    status: Optional[List[CVRStatus]] = Field(None, min_items=0)
    type: CVRType


class CVR(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.CVR"] = Field(..., alias="@type")

    ballot_audit_id: Optional[str] = None
    ballot_image: Optional[List[ImageData]] = Field(None, min_items=0)
    ballot_pre_printed_id: Optional[str] = None
    ballot_sheet_id: Optional[str] = None
    ballot_style_id: Optional[str] = None
    ballot_style_unit_id: Optional[str] = None
    batch_id: Optional[str] = None
    batch_sequence_id: Optional[int] = None
    c_v_r_snapshot: List[CVRSnapshot] = Field(..., min_items=1)
    creating_device_id: Optional[str] = None
    current_snapshot_id: str
    election_id: str
    party_ids: Optional[List[str]] = Field(None, min_items=0)
    unique_id: Optional[str] = None


class Election(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.Election"] = Field(..., alias="@type")

    candidate: Optional[List[Candidate]] = Field(None, min_items=0)
    code: Optional[List[Code]] = Field(None, min_items=0)
    contest: List[
        Union[
            Contest,
            PartyContest,
            BallotMeasureContest,
            CandidateContest,
            RetentionContest,
        ]
    ] = Field(..., min_items=1)
    election_scope_id: str
    name: Optional[str] = None


class CastVoteRecordReport(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.CastVoteRecordReport"] = Field(..., alias="@type")

    c_v_r: Optional[List[CVR]] = Field(None, min_items=0)
    election: List[Election] = Field(..., min_items=1)
    generated_date: datetime
    gp_unit: List[GpUnit] = Field(..., min_items=1)
    notes: Optional[str] = None
    other_report_type: Optional[str] = None
    party: Optional[List[Party]] = Field(None, min_items=0)
    report_generating_device_ids: List[str] = Field(..., min_items=1)
    report_type: Optional[List[ReportType]] = Field(None, min_items=0)
    reporting_device: List[ReportingDevice] = Field(..., min_items=1)
    version: CastVoteRecordVersion
