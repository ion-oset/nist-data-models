# generated by datamodel-codegen:
#   filename:  NIST_V0_cast_vote_records.json

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional, Union

from pydantic import AnyUrl, BaseModel, Extra, Field, constr


class AllocationStatus(Enum):
    no = 'no'
    unknown = 'unknown'
    yes = 'yes'


class _TypeModel01(Enum):
    CVR_Annotation = 'CVR.Annotation'


class Annotation(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel01 = Field(..., alias='@type')
    AdjudicatorName: Optional[List[str]] = Field(None, min_items=0)
    Message: Optional[List[str]] = Field(None, min_items=0)
    TimeStamp: Optional[datetime] = None


class CVRStatus(Enum):
    needs_adjudication = 'needs-adjudication'
    other = 'other'


class CVRType(Enum):
    interpreted = 'interpreted'
    modified = 'modified'
    original = 'original'


class CastVoteRecordVersion(Enum):
    field_1_0_0 = '1.0.0'


class ContestSelectionStatus(Enum):
    generated_rules = 'generated-rules'
    invalidated_rules = 'invalidated-rules'
    needs_adjudication = 'needs-adjudication'
    other = 'other'


class ContestStatus(Enum):
    invalidated_rules = 'invalidated-rules'
    not_indicated = 'not-indicated'
    other = 'other'
    overvoted = 'overvoted'
    undervoted = 'undervoted'


class _TypeModel17(Enum):
    CVR_File = 'CVR.File'


class File(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel17 = Field(..., alias='@type')
    Data: str
    FileName: Optional[str] = None
    MimeType: Optional[str] = None


class FractionalNumber(BaseModel):
    __root__: constr(regex=r'([0-9]+/[1-9]+[0-9]*)|(\.[0-9]+)')


class HashType(Enum):
    md6 = 'md6'
    other = 'other'
    sha_256 = 'sha-256'
    sha_512 = 'sha-512'


class IdentifierType(Enum):
    fips = 'fips'
    local_level = 'local-level'
    national_level = 'national-level'
    ocd_id = 'ocd-id'
    other = 'other'
    state_level = 'state-level'


class _TypeModel20(Enum):
    CVR_Image = 'CVR.Image'


class Image(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel20 = Field(..., alias='@type')
    Data: str
    FileName: Optional[str] = None
    MimeType: Optional[str] = None


class IndicationStatus(Enum):
    no = 'no'
    unknown = 'unknown'
    yes = 'yes'


class PositionStatus(Enum):
    adjudicated = 'adjudicated'
    generated_rules = 'generated-rules'
    invalidated_rules = 'invalidated-rules'
    other = 'other'


class ReportType(Enum):
    adjudicated = 'adjudicated'
    aggregated = 'aggregated'
    originating_device_export = 'originating-device-export'
    other = 'other'
    rcv_round = 'rcv-round'


class ReportingUnitType(Enum):
    combined_precinct = 'combined-precinct'
    other = 'other'
    polling_place = 'polling-place'
    precinct = 'precinct'
    split_precinct = 'split-precinct'
    vote_center = 'vote-center'


class VoteVariation(Enum):
    approval = 'approval'
    borda = 'borda'
    cumulative = 'cumulative'
    majority = 'majority'
    n_of_m = 'n-of-m'
    other = 'other'
    plurality = 'plurality'
    proportional = 'proportional'
    range = 'range'
    rcv = 'rcv'
    super_majority = 'super-majority'


class _TypeModel13(Enum):
    CVR_Code = 'CVR.Code'


class Code(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel13 = Field(..., alias='@type')
    Label: Optional[str] = None
    OtherType: Optional[str] = None
    Type: IdentifierType
    Value: str


class _TypeModel15(Enum):
    CVR_ContestSelection = 'CVR.ContestSelection'


class ContestSelection(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel15 = Field(..., alias='@type')
    Code: Optional[List[Code]] = Field(None, min_items=0)


class _TypeModel18(Enum):
    CVR_GpUnit = 'CVR.GpUnit'


class GpUnit(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel18 = Field(..., alias='@type')
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Name: Optional[str] = None
    OtherType: Optional[str] = None
    ReportingDeviceIds: Optional[List[str]] = Field(None, min_items=0)
    Type: ReportingUnitType


class _TypeModel19(Enum):
    CVR_Hash = 'CVR.Hash'


class Hash(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel19 = Field(..., alias='@type')
    OtherType: Optional[str] = None
    Type: HashType
    Value: str


class _TypeModel21(Enum):
    CVR_ImageData = 'CVR.ImageData'


class ImageData(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel21 = Field(..., alias='@type')
    Hash: Optional[Hash] = None
    Image: Optional[Image] = None
    Location: Optional[AnyUrl] = None


class _TypeModel22(Enum):
    CVR_Party = 'CVR.Party'


class Party(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel22 = Field(..., alias='@type')
    Abbreviation: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Name: Optional[str] = None


class _TypeModel24(Enum):
    CVR_PartySelection = 'CVR.PartySelection'


class PartySelection(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel24 = Field(..., alias='@type')
    Code: Optional[List[Code]] = Field(None, min_items=0)
    PartyIds: List[str] = Field(..., min_items=1)


class _TypeModel23(Enum):
    CVR_ReportingDevice = 'CVR.ReportingDevice'


class ReportingDevice(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel23 = Field(..., alias='@type')
    Application: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Manufacturer: Optional[str] = None
    MarkMetricType: Optional[str] = None
    Model: Optional[str] = None
    Notes: Optional[List[str]] = Field(None, min_items=0)
    SerialNumber: Optional[str] = None


class _TypeModel02(Enum):
    CVR_BallotMeasureSelection = 'CVR.BallotMeasureSelection'


class BallotMeasureSelection(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel02 = Field(..., alias='@type')
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Selection: str


class _TypeModel08(Enum):
    CVR_CVRWriteIn = 'CVR.CVRWriteIn'


class CVRWriteIn(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel08 = Field(..., alias='@type')
    Text: Optional[str] = None
    WriteInImage: Optional[ImageData] = None


class _TypeModel09(Enum):
    CVR_Candidate = 'CVR.Candidate'


class Candidate(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel09 = Field(..., alias='@type')
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Name: Optional[str] = None
    PartyId: Optional[str] = None


class _TypeModel11(Enum):
    CVR_CandidateSelection = 'CVR.CandidateSelection'


class CandidateSelection(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel11 = Field(..., alias='@type')
    CandidateIds: Optional[List[str]] = Field(None, min_items=0)
    Code: Optional[List[Code]] = Field(None, min_items=0)
    IsWriteIn: Optional[bool] = None


class _TypeModel14(Enum):
    CVR_Contest = 'CVR.Contest'


class Contest(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel14 = Field(..., alias='@type')
    Abbreviation: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    ContestSelection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    Name: Optional[str] = None
    OtherVoteVariation: Optional[str] = None
    VoteVariation: Optional[VoteVariation] = None


class _TypeModel25(Enum):
    CVR_PartyContest = 'CVR.PartyContest'


class PartyContest(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel25 = Field(..., alias='@type')
    Abbreviation: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    ContestSelection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    Name: Optional[str] = None
    OtherVoteVariation: Optional[str] = None
    VoteVariation: Optional[VoteVariation] = None


class _TypeModel26(Enum):
    CVR_RetentionContest = 'CVR.RetentionContest'


class RetentionContest(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel26 = Field(..., alias='@type')
    Abbreviation: Optional[str] = None
    CandidateId: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    ContestSelection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    Name: Optional[str] = None
    OtherVoteVariation: Optional[str] = None
    VoteVariation: Optional[VoteVariation] = None


class _TypeModel27(Enum):
    CVR_SelectionPosition = 'CVR.SelectionPosition'


class SelectionPosition(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel27 = Field(..., alias='@type')
    CVRWriteIn: Optional[CVRWriteIn] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    FractionalVotes: Optional[FractionalNumber] = None
    HasIndication: IndicationStatus
    IsAllocable: Optional[AllocationStatus] = None
    IsGenerated: Optional[bool] = None
    MarkMetricValue: Optional[List[str]] = Field(None, min_items=0)
    NumberVotes: int
    OtherStatus: Optional[str] = None
    Position: Optional[int] = None
    Rank: Optional[int] = None
    Status: Optional[List[PositionStatus]] = Field(None, min_items=0)


class _TypeModel03(Enum):
    CVR_BallotMeasureSelection = 'CVR.BallotMeasureSelection'


class BallotMeasureContest(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel03 = Field(..., alias='@type')
    Abbreviation: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    ContestSelection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    Name: Optional[str] = None
    OtherVoteVariation: Optional[str] = None
    VoteVariation: Optional[VoteVariation] = None


class _TypeModel06(Enum):
    CVR_CVRContestSelection = 'CVR.CVRContestSelection'


class CVRContestSelection(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel06 = Field(..., alias='@type')
    ContestSelectionId: Optional[str] = None
    OptionPosition: Optional[int] = None
    OtherStatus: Optional[str] = None
    Rank: Optional[int] = None
    SelectionPosition: List[SelectionPosition] = Field(..., min_items=1)
    Status: Optional[List[ContestSelectionStatus]] = Field(None, min_items=0)
    TotalFractionalVotes: Optional[FractionalNumber] = None
    TotalNumberVotes: Optional[int] = None


class _TypeModel10(Enum):
    CVR_CandidateContest = 'CVR.CandidateContest'


class CandidateContest(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel10 = Field(..., alias='@type')
    Abbreviation: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    ContestSelection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    Name: Optional[str] = None
    NumberElected: Optional[int] = None
    OtherVoteVariation: Optional[str] = None
    PrimaryPartyId: Optional[str] = None
    VoteVariation: Optional[VoteVariation] = None
    VotesAllowed: Optional[int] = None


class _TypeModel16(Enum):
    CVR_Election = 'CVR.Election'


class Election(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel16 = Field(..., alias='@type')
    Candidate: Optional[List[Candidate]] = Field(None, min_items=0)
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Contest: List[
        Union[
            Contest,
            PartyContest,
            BallotMeasureContest,
            CandidateContest,
            RetentionContest,
        ]
    ] = Field(..., min_items=1)
    ElectionScopeId: str
    Name: Optional[str] = None


class _TypeModel05(Enum):
    CVR_CVRContest = 'CVR.CVRContest'


class CVRContest(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel05 = Field(..., alias='@type')
    CVRContestSelection: Optional[List[CVRContestSelection]] = Field(None, min_items=0)
    ContestId: str
    OtherStatus: Optional[str] = None
    Overvotes: Optional[int] = None
    Selections: Optional[int] = None
    Status: Optional[List[ContestStatus]] = Field(None, min_items=0)
    Undervotes: Optional[int] = None
    WriteIns: Optional[int] = None


class _TypeModel07(Enum):
    CVR_CVRSnapshot = 'CVR.CVRSnapshot'


class CVRSnapshot(BaseModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias='@id')
    _type: _TypeModel07 = Field(..., alias='@type')
    Annotation: Optional[List[Annotation]] = Field(None, min_items=0)
    CVRContest: Optional[List[CVRContest]] = Field(None, min_items=0)
    OtherStatus: Optional[str] = None
    Status: Optional[List[CVRStatus]] = Field(None, min_items=0)
    Type: CVRType


class _TypeModel04(Enum):
    CVR_CVR = 'CVR.CVR'


class CVR(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel04 = Field(..., alias='@type')
    BallotAuditId: Optional[str] = None
    BallotImage: Optional[List[ImageData]] = Field(None, min_items=0)
    BallotPrePrintedId: Optional[str] = None
    BallotSheetId: Optional[str] = None
    BallotStyleId: Optional[str] = None
    BallotStyleUnitId: Optional[str] = None
    BatchId: Optional[str] = None
    BatchSequenceId: Optional[int] = None
    CVRSnapshot: List[CVRSnapshot] = Field(..., min_items=1)
    CreatingDeviceId: Optional[str] = None
    CurrentSnapshotId: str
    ElectionId: str
    PartyIds: Optional[List[str]] = Field(None, min_items=0)
    UniqueId: Optional[str] = None


class _TypeModel12(Enum):
    CVR_CastVoteRecordReport = 'CVR.CastVoteRecordReport'


class CastVoteRecordReport(BaseModel):
    class Config:
        extra = Extra.forbid

    _type: _TypeModel12 = Field(..., alias='@type')
    CVR: Optional[List[CVR]] = Field(None, min_items=0)
    Election: List[Election] = Field(..., min_items=1)
    GeneratedDate: datetime
    GpUnit: List[GpUnit] = Field(..., min_items=1)
    Notes: Optional[str] = None
    OtherReportType: Optional[str] = None
    Party: Optional[List[Party]] = Field(None, min_items=0)
    ReportGeneratingDeviceIds: List[str] = Field(..., min_items=1)
    ReportType: Optional[List[ReportType]] = Field(None, min_items=0)
    ReportingDevice: List[ReportingDevice] = Field(..., min_items=1)
    Version: CastVoteRecordVersion
