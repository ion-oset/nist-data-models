# generated by datamodel-codegen:
#   filename:  NIST_V0_cast_vote_records.json

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional, Union

from pydantic import AnyUrl, Extra, Field
from typing_extensions import Literal

from electos.datamodels.nist.models.base import NistModel


# --- Enumerations


class AllocationStatus(Enum):
    no = "no"
    unknown = "unknown"
    yes = "yes"


class CastVoteRecordVersion(Enum):
    field_1_0_0 = "1.0.0"


class ContestSelectionStatus(Enum):
    generated_rules = "generated-rules"
    invalidated_rules = "invalidated-rules"
    needs_adjudication = "needs-adjudication"
    other = "other"


class ContestStatus(Enum):
    invalidated_rules = "invalidated-rules"
    not_indicated = "not-indicated"
    other = "other"
    overvoted = "overvoted"
    undervoted = "undervoted"


class CVRStatus(Enum):
    needs_adjudication = "needs-adjudication"
    other = "other"


class CVRType(Enum):
    interpreted = "interpreted"
    modified = "modified"
    original = "original"


class HashType(Enum):
    md6 = "md6"
    other = "other"
    sha_256 = "sha-256"
    sha_512 = "sha-512"


class IdentifierType(Enum):
    fips = "fips"
    local_level = "local-level"
    national_level = "national-level"
    ocd_id = "ocd-id"
    other = "other"
    state_level = "state-level"


class IndicationStatus(Enum):
    no = "no"
    unknown = "unknown"
    yes = "yes"


class PositionStatus(Enum):
    adjudicated = "adjudicated"
    generated_rules = "generated-rules"
    invalidated_rules = "invalidated-rules"
    other = "other"


class ReportType(Enum):
    adjudicated = "adjudicated"
    aggregated = "aggregated"
    originating_device_export = "originating-device-export"
    other = "other"
    rcv_round = "rcv-round"


class ReportingUnitType(Enum):
    combined_precinct = "combined-precinct"
    other = "other"
    polling_place = "polling-place"
    precinct = "precinct"
    split_precinct = "split-precinct"
    vote_center = "vote-center"


class VoteVariation(Enum):
    approval = "approval"
    borda = "borda"
    cumulative = "cumulative"
    majority = "majority"
    n_of_m = "n-of-m"
    other = "other"
    plurality = "plurality"
    proportional = "proportional"
    range = "range"
    rcv = "rcv"
    super_majority = "super-majority"


# --- Models


class Annotation(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.Annotation"] = Field(..., alias="@type")
    AdjudicatorName: Optional[List[str]] = Field(None, min_items=0)
    Message: Optional[List[str]] = Field(None, min_items=0)
    TimeStamp: Optional[datetime] = None


class Code(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.Code"] = Field(..., alias="@type")
    Label: Optional[str] = None
    OtherType: Optional[str] = None
    Type: IdentifierType
    Value: str


class File(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.File"] = Field(..., alias="@type")
    Data: str
    FileName: Optional[str] = None
    MimeType: Optional[str] = None


class FractionalNumber(NistModel):
    __root__: str = Field(..., regex="([0-9]+/[1-9]+[0-9]*)|(\\.[0-9]+)")


class Hash(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.Hash"] = Field(..., alias="@type")
    OtherType: Optional[str] = None
    Type: HashType
    Value: str


class Image(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.Image"] = Field(..., alias="@type")
    Data: str
    FileName: Optional[str] = None
    MimeType: Optional[str] = None


class ImageData(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.ImageData"] = Field(..., alias="@type")
    Hash: Optional[Hash] = None
    Image: Optional[Image] = None
    Location: Optional[AnyUrl] = None


class ReportingDevice(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.ReportingDevice"] = Field(..., alias="@type")
    Application: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Manufacturer: Optional[str] = None
    MarkMetricType: Optional[str] = None
    Model: Optional[str] = None
    Notes: Optional[List[str]] = Field(None, min_items=0)
    SerialNumber: Optional[str] = None


class GpUnit(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.GpUnit"] = Field(..., alias="@type")
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Name: Optional[str] = None
    OtherType: Optional[str] = None
    ReportingDeviceIds: Optional[List[str]] = Field(None, min_items=0)
    Type: ReportingUnitType


class BallotMeasureSelection(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.BallotMeasureSelection"] = Field(..., alias="@type")
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Selection: str


class CandidateSelection(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.CandidateSelection"] = Field(..., alias="@type")
    CandidateIds: Optional[List[str]] = Field(None, min_items=0)
    Code: Optional[List[Code]] = Field(None, min_items=0)
    IsWriteIn: Optional[bool] = None


class ContestSelection(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.ContestSelection"] = Field(..., alias="@type")
    Code: Optional[List[Code]] = Field(None, min_items=0)


class PartySelection(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.PartySelection"] = Field(..., alias="@type")
    Code: Optional[List[Code]] = Field(None, min_items=0)
    PartyIds: List[str] = Field(..., min_items=1)


class Party(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.Party"] = Field(..., alias="@type")
    Abbreviation: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Name: Optional[str] = None


class Candidate(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.Candidate"] = Field(..., alias="@type")
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Name: Optional[str] = None
    PartyId: Optional[str] = None


class Contest(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.Contest"] = Field(..., alias="@type")
    Abbreviation: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    ContestSelection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    Name: Optional[str] = None
    OtherVoteVariation: Optional[str] = None
    VoteVariation: Optional[VoteVariation] = None


class BallotMeasureContest(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.BallotMeasureContest"] = Field(..., alias="@type")
    Abbreviation: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    ContestSelection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    Name: Optional[str] = None
    OtherVoteVariation: Optional[str] = None
    VoteVariation: Optional[VoteVariation] = None


class CandidateContest(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.CandidateContest"] = Field(..., alias="@type")
    Abbreviation: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    ContestSelection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    Name: Optional[str] = None
    NumberElected: Optional[int] = None
    OtherVoteVariation: Optional[str] = None
    PrimaryPartyId: Optional[str] = None
    VoteVariation: Optional[VoteVariation] = None
    VotesAllowed: Optional[int] = None


class PartyContest(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.PartyContest"] = Field(..., alias="@type")
    Abbreviation: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    ContestSelection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    Name: Optional[str] = None
    OtherVoteVariation: Optional[str] = None
    VoteVariation: Optional[VoteVariation] = None


class RetentionContest(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.RetentionContest"] = Field(..., alias="@type")
    Abbreviation: Optional[str] = None
    CandidateId: Optional[str] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    ContestSelection: List[
        Union[
            ContestSelection, PartySelection, BallotMeasureSelection, CandidateSelection
        ]
    ] = Field(..., min_items=1)
    Name: Optional[str] = None
    OtherVoteVariation: Optional[str] = None
    VoteVariation: Optional[VoteVariation] = None


class CVRWriteIn(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.CVRWriteIn"] = Field(..., alias="@type")
    Text: Optional[str] = None
    WriteInImage: Optional[ImageData] = None


class SelectionPosition(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.SelectionPosition"] = Field(..., alias="@type")
    CVRWriteIn: Optional[CVRWriteIn] = None
    Code: Optional[List[Code]] = Field(None, min_items=0)
    FractionalVotes: Optional[FractionalNumber] = None
    HasIndication: IndicationStatus
    IsAllocable: Optional[AllocationStatus] = None
    IsGenerated: Optional[bool] = None
    MarkMetricValue: Optional[List[str]] = Field(None, min_items=0)
    NumberVotes: int
    OtherStatus: Optional[str] = None
    Position: Optional[int] = None
    Rank: Optional[int] = None
    Status: Optional[List[PositionStatus]] = Field(None, min_items=0)


class CVRContestSelection(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.CVRContestSelection"] = Field(..., alias="@type")
    ContestSelectionId: Optional[str] = None
    OptionPosition: Optional[int] = None
    OtherStatus: Optional[str] = None
    Rank: Optional[int] = None
    SelectionPosition: List[SelectionPosition] = Field(..., min_items=1)
    Status: Optional[List[ContestSelectionStatus]] = Field(None, min_items=0)
    TotalFractionalVotes: Optional[FractionalNumber] = None
    TotalNumberVotes: Optional[int] = None


class CVRContest(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.CVRContest"] = Field(..., alias="@type")
    CVRContestSelection: Optional[List[CVRContestSelection]] = Field(None, min_items=0)
    ContestId: str
    OtherStatus: Optional[str] = None
    Overvotes: Optional[int] = None
    Selections: Optional[int] = None
    Status: Optional[List[ContestStatus]] = Field(None, min_items=0)
    Undervotes: Optional[int] = None
    WriteIns: Optional[int] = None


class CVRSnapshot(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.CVRSnapshot"] = Field(..., alias="@type")
    Annotation: Optional[List[Annotation]] = Field(None, min_items=0)
    CVRContest: Optional[List[CVRContest]] = Field(None, min_items=0)
    OtherStatus: Optional[str] = None
    Status: Optional[List[CVRStatus]] = Field(None, min_items=0)
    Type: CVRType


class CVR(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.CVR"] = Field(..., alias="@type")
    BallotAuditId: Optional[str] = None
    BallotImage: Optional[List[ImageData]] = Field(None, min_items=0)
    BallotPrePrintedId: Optional[str] = None
    BallotSheetId: Optional[str] = None
    BallotStyleId: Optional[str] = None
    BallotStyleUnitId: Optional[str] = None
    BatchId: Optional[str] = None
    BatchSequenceId: Optional[int] = None
    CVRSnapshot: List[CVRSnapshot] = Field(..., min_items=1)
    CreatingDeviceId: Optional[str] = None
    CurrentSnapshotId: str
    ElectionId: str
    PartyIds: Optional[List[str]] = Field(None, min_items=0)
    UniqueId: Optional[str] = None


class Election(NistModel):
    class Config:
        extra = Extra.forbid

    _id: str = Field(..., alias="@id")
    _type: Literal["CVR.Election"] = Field(..., alias="@type")
    Candidate: Optional[List[Candidate]] = Field(None, min_items=0)
    Code: Optional[List[Code]] = Field(None, min_items=0)
    Contest: List[
        Union[
            Contest,
            PartyContest,
            BallotMeasureContest,
            CandidateContest,
            RetentionContest,
        ]
    ] = Field(..., min_items=1)
    ElectionScopeId: str
    Name: Optional[str] = None


class CastVoteRecordReport(NistModel):
    class Config:
        extra = Extra.forbid

    _type: Literal["CVR.CastVoteRecordReport"] = Field(..., alias="@type")
    CVR: Optional[List[CVR]] = Field(None, min_items=0)
    Election: List[Election] = Field(..., min_items=1)
    GeneratedDate: datetime
    GpUnit: List[GpUnit] = Field(..., min_items=1)
    Notes: Optional[str] = None
    OtherReportType: Optional[str] = None
    Party: Optional[List[Party]] = Field(None, min_items=0)
    ReportGeneratingDeviceIds: List[str] = Field(..., min_items=1)
    ReportType: Optional[List[ReportType]] = Field(None, min_items=0)
    ReportingDevice: List[ReportingDevice] = Field(..., min_items=1)
    Version: CastVoteRecordVersion
